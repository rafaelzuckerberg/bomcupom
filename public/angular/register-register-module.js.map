{"version":3,"sources":["./src/app/register/register-user/register-user.component.html","./src/app/register/register/register.component.html","./src/app/register/register-routing.module.ts","./src/app/register/register-user/register-user.component.css","./src/app/register/register-user/register-user.component.ts","./src/app/register/register.module.ts","./src/app/register/register/register.component.css","./src/app/register/register/register.component.ts"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["export default \"<form [formGroup]=\\\"form\\\">\\n    <p>Use the form below to change your password.</p>\\n  \\n    <div fxLayout=\\\"row\\\">\\n  \\n      <div fxFlex=\\\"40%\\\" fxFlex.md=\\\"60%\\\" fxFlex.sm=\\\"50%\\\" fxFlex.xs=\\\"100%\\\">\\n  \\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput placeholder=\\\"Nome de usuário\\\" formControlName=\\\"name\\\"\\n            autocomplete=\\\"name\\\"> \\n          <mat-error *ngIf=\\\"form.controls['name'].hasError('required')\\\">\\n            Campo nome obrigatório\\n          </mat-error>\\n        </mat-form-field>\\n        \\n\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput placeholder=\\\"Email de usuário\\\" formControlName=\\\"email\\\"\\n            autocomplete=\\\"current-password\\\">\\n          <mat-error *ngIf=\\\"form.controls['email'].hasError('required')\\\">\\n            Campo email obrigatório\\n          </mat-error>\\n        </mat-form-field>\\n  \\n\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput placeholder=\\\"Digite a senha\\\" formControlName=\\\"password\\\" [type]=\\\"hideNewPassword ? 'password' : 'text'\\\" autocomplete=\\\"new-password\\\">\\n          <mat-icon matSuffix (click)=\\\"hideNewPassword = !hideNewPassword\\\">\\n            {{ hideNewPassword ? 'visibility' : 'visibility_off' }}\\n          </mat-icon>  \\n          <mat-error *ngIf=\\\"form.controls['password'].hasError('required')\\\">\\n            Campo senha obrigatório\\n          </mat-error>\\n        </mat-form-field>\\n\\n  \\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput placeholder=\\\"Repita a senha\\\" formControlName=\\\"password_confirm\\\" [type]=\\\"hideNewPassword ? 'password' : 'text'\\\"\\n            autocomplete=\\\"new-password\\\">\\n          <mat-icon matSuffix (click)=\\\"hideNewPassword = !hideNewPassword\\\">\\n            {{ hideNewPassword ? 'visibility' : 'visibility_off' }}\\n          </mat-icon>  \\n          <mat-error *ngIf=\\\"form.controls['password_confirm'].hasError('required')\\\">\\n            Please confirm your new password\\n          </mat-error>\\n        </mat-form-field>\\n\\n\\n        <mat-form-field class=\\\"full-width\\\">\\n          <mat-label>Data de nascimento</mat-label>\\n            <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"date_birth\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker></mat-datepicker>\\n        </mat-form-field>\\n\\n  \\n        <mat-form-field class=\\\"full-width\\\">\\n          <mat-select formControlName=\\\"sex\\\">\\n            <mat-option value=\\\"1\\\">Masculino</mat-option>\\n            <mat-option value=\\\"2\\\">Feminino</mat-option>\\n          </mat-select> \\n        </mat-form-field>\\n  \\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"form.invalid || disableSubmit\\\" (click)=\\\"changePassword()\\\">Cadastrar</button>\\n  \\n      </div>\\n  \\n    </div>\\n  \\n  </form>\\n  \\n  <!-- <div class=\\\"password-rules\\\" fxFlex=\\\"65%\\\" fxFlex.sm=\\\"90%\\\" fxFlex.xs=\\\"95%\\\">\\n      Password rules:\\n      <mat-list>\\n        <mat-list-item>\\n          Must be at least 6 characters\\n        </mat-list-item>\\n  \\n        <mat-list-item>\\n          Must contain at least one non alphanumeric character\\n        </mat-list-item>\\n  \\n        <mat-list-item>\\n          Must contain at least one lowercase ('a'-'z')\\n        </mat-list-item>\\n  \\n        <mat-list-item>\\n          Must contain at least one uppercase ('A'-'Z')\\n        </mat-list-item>\\n      </mat-list>\\n    </div> -->\"","export default \"<div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center none\\\">\\n\\n    <div fxFlex=\\\"95%\\\">\\n  \\n      <mat-card>\\n        <mat-card-content>\\n          <h2>Benefícios BomCupom</h2>\\n  \\n          <div fxLayout=\\\"row\\\" fxLayout.sm=\\\"column\\\" fxLayout.xs=\\\"column\\\">\\n  \\n            <div fxFlex=\\\"30%\\\" fxFlex.sm=\\\"95%\\\" fxFlex.xs=\\\"95%\\\">\\n              <!-- <app-profile-details></app-profile-details> -->\\n            </div>\\n  \\n            <div fxFlex></div>\\n  \\n            <div fxFlex=\\\"65%\\\" fxFlex.sm=\\\"95%\\\" fxFlex.xs=\\\"950%\\\">\\n  \\n              <mat-tab-group>\\n                <mat-tab label=\\\"Change Password\\\">\\n                  <app-register-user></app-register-user>\\n                </mat-tab>\\n              </mat-tab-group>  \\n  \\n            </div>\\n  \\n          </div>\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n  \\n  \\n  </div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'user',\n    component: RegisterComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule { }\n","export default \".password-rules .mat-divider {\\r\\n    position: unset !important;\\r\\n}\\r\\n.container{\\r\\n    padding-top: 20px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXItdXNlci9yZWdpc3Rlci11c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwwQkFBMEI7QUFDOUI7QUFDQTtJQUNJLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLXVzZXIvcmVnaXN0ZXItdXNlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhc3N3b3JkLXJ1bGVzIC5tYXQtZGl2aWRlciB7XHJcbiAgICBwb3NpdGlvbjogdW5zZXQgIWltcG9ydGFudDtcclxufVxyXG4uY29udGFpbmVye1xyXG4gICAgcGFkZGluZy10b3A6IDIwcHg7XHJcbn0iXX0= */\"","import { NotificationService } from './../../core/services/notification.service';\nimport { SpinnerService } from './../../core/services/spinner.service';\nimport { NGXLogger } from 'ngx-logger';\nimport { AuthenticationService } from 'src/app/core/services/auth.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register-user',\n  templateUrl: './register-user.component.html',\n  styleUrls: ['./register-user.component.css']\n})\nexport class RegisterUserComponent implements OnInit {\n\n  form: FormGroup;\n  hideCurrentPassword: boolean;\n  hideNewPassword: boolean;\n  name: string;\n  email: string;\n  password: string;\n  password_confirm: string;\n  date_birth: string;\n  sex: number;\n  disableSubmit: boolean; \n\n  constructor(private authService: AuthenticationService,\n    private logger: NGXLogger,\n    private spinnerService: SpinnerService,\n    private notificationService: NotificationService) {\n\n    this.hideCurrentPassword = true;\n    this.hideNewPassword = true;\n  }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      name: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n      password_confirm: new FormControl('', Validators.required),\n      date_birth: new FormControl('', Validators.required),\n      sex: new FormControl('', Validators.required),\n    });\n\n    this.form.get('name').valueChanges\n      .subscribe(val => { this.name = val; });\n\n    this.form.get('email').valueChanges\n      .subscribe(val => { this.email = val; });\n\n    this.form.get('password').valueChanges\n      .subscribe(val => { this.password = val; });\n    \n      this.form.get('password_confirm').valueChanges\n      .subscribe(val => { this.password_confirm = val; });\n     \n      this.form.get('date_birth').valueChanges\n      .subscribe(val => { this.sex = val; });\n     \n      this.form.get('sex').valueChanges\n      .subscribe(val => { this.sex = val; });\n\n    this.spinnerService.visibility.subscribe((value) => {\n      this.disableSubmit = value;\n    });\n  }\n\n  // changePassword() {\n  //   if (this.password !== this.password_confirm) {\n  //     this.notificationService.openSnackBar('New passwords do not match.');\n  //     return;\n  //   }\n\n  //   const email = this.authService.getCurrentUser().email;\n\n  //   this.authService.changePassword(email, this.password_confirm, this.password)\n  //     .subscribe(\n  //       data => {\n  //         this.logger.info(`User ${email} changed password.`);\n  //         this.form.reset();\n  //         this.notificationService.openSnackBar('Your password has been changed.');\n  //       },\n  //       error => {\n  //         this.notificationService.openSnackBar(error.error);\n  //       }\n  //     );\n  // }\n\n}\n","import { SharedModule } from './../shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RegisterRoutingModule } from './register-routing.module';\nimport { RegisterUserComponent } from './register-user/register-user.component';\nimport { RegisterComponent } from './register/register.component';\n\n\n@NgModule({\n  declarations: [\n    RegisterUserComponent,\n    RegisterComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RegisterRoutingModule\n  ]\n})\nexport class RegisterModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Title } from '@angular/platform-browser';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private titleService: Title) { }\n\n  ngOnInit() {\n    this.titleService.setTitle('Meu cadastro');\n  }\n\n}\n"],"sourceRoot":"webpack:///"}