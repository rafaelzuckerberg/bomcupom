{"version":3,"sources":["./src/app/register/details-benefits/details-benefits.component.html","./src/app/register/register-user/register-user.component.html","./src/app/register/register/register.component.html","./src/app/core/services/register.service.ts","./src/app/register/details-benefits/details-benefits.component.css","./src/app/register/details-benefits/details-benefits.component.ts","./src/app/register/register-routing.module.ts","./src/app/register/register-user/register-user.component.css","./src/app/register/register-user/register-user.component.ts","./src/app/register/register.module.ts","./src/app/register/register/register.component.css","./src/app/register/register/register.component.ts"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["export default \"<div class=\\\"profile-card\\\" [ngStyle]=\\\"{background: 'url(angular/assets/images/backgrounds/register_2.jpg'}\\\">\\n    <!-- <img src=\\\"angular/assets/user.png\\\" [alt]=\\\"fullName\\\"> -->\\n  \\n    <h1 class=\\\"title\\\">Benefícios </h1>\\n  \\n    <label>\\n      Tenha todos os benefícios de nossos clientes cadastrados.\\n    </label>\\n\\n\\n    <ul class=\\\"a\\\">\\n      <li>Compre em um estabelecimento</li>\\n      <li>Receba desconto</li>\\n      <li>Ganhe Cupons em nossos estabelecimentos</li>\\n      <li>Receba brindes no app</li>\\n      <li>Receba</li>\\n      <li>Receba</li>\\n    </ul>\\n  \\n</div>\"","export default \"<form [formGroup]=\\\"form\\\">\\n    <!-- <p>Use the form below to change your password.</p> -->\\n  \\n    <div fxLayout=\\\"row\\\">\\n  \\n      <div fxFlex=\\\"90%\\\" fxFlex.md=\\\"60%\\\" fxFlex.sm=\\\"50%\\\" fxFlex.xs=\\\"100%\\\" class=\\\"block-form\\\">\\n  \\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput placeholder=\\\"Nome de usuário\\\" formControlName=\\\"name\\\"\\n            autocomplete=\\\"name\\\"> \\n          <mat-error *ngIf=\\\"form.controls['name'].hasError('required')\\\">\\n            Campo nome obrigatório\\n          </mat-error>\\n        </mat-form-field>\\n        \\n\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput placeholder=\\\"Email de usuário\\\" formControlName=\\\"email\\\"\\n            autocomplete=\\\"current-password\\\">\\n          <mat-error *ngIf=\\\"form.controls['email'].hasError('required')\\\">\\n            Campo email obrigatório\\n          </mat-error>\\n        </mat-form-field>\\n  \\n\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput placeholder=\\\"Digite a senha\\\" formControlName=\\\"password\\\" [type]=\\\"hideNewPassword ? 'password' : 'text'\\\" autocomplete=\\\"new-password\\\">\\n          <mat-icon matSuffix (click)=\\\"hideNewPassword = !hideNewPassword\\\">\\n            {{ hideNewPassword ? 'visibility' : 'visibility_off' }}\\n          </mat-icon>  \\n          <mat-error *ngIf=\\\"form.controls['password'].hasError('required')\\\">\\n            Campo senha obrigatório\\n          </mat-error>\\n        </mat-form-field>\\n\\n  \\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput placeholder=\\\"Repita a senha\\\" formControlName=\\\"password_confirm\\\" [type]=\\\"hideNewPassword ? 'password' : 'text'\\\"\\n            autocomplete=\\\"new-password\\\">\\n          <mat-icon matSuffix (click)=\\\"hideNewPassword = !hideNewPassword\\\">\\n            {{ hideNewPassword ? 'visibility' : 'visibility_off' }}\\n          </mat-icon>  \\n          <mat-error *ngIf=\\\"form.controls['password_confirm'].hasError('required')\\\">\\n            Please confirm your new password\\n          </mat-error>\\n        </mat-form-field>\\n\\n\\n        <mat-form-field class=\\\"full-width\\\">\\n          <mat-label>Data de nascimento</mat-label>\\n            <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"date_birth\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker></mat-datepicker>\\n        </mat-form-field>\\n\\n  \\n        <mat-form-field class=\\\"full-width\\\">\\n          <mat-label>Sexo</mat-label>\\n          <mat-select formControlName=\\\"genre\\\">            \\n            <mat-option value=\\\"1\\\">Masculino</mat-option>\\n            <mat-option value=\\\"2\\\">Feminino</mat-option>\\n          </mat-select> \\n        </mat-form-field>\\n  \\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"form.invalid || disableSubmit\\\" (click)=\\\"registerUser()\\\">Cadastrar</button>\\n\\n        <a mat-button color=\\\"primary\\\" [routerLink]=\\\"['/auth/login']\\\">Já sou cliente</a>\\n  \\n      </div>\\n  \\n    </div>\\n  \\n  </form>\\n  \\n  <!-- <div class=\\\"password-rules\\\" fxFlex=\\\"65%\\\" fxFlex.sm=\\\"90%\\\" fxFlex.xs=\\\"95%\\\">\\n      Password rules:\\n      <mat-list>\\n        <mat-list-item>\\n          Must be at least 6 characters\\n        </mat-list-item>\\n  \\n        <mat-list-item>\\n          Must contain at least one non alphanumeric character\\n        </mat-list-item>\\n  \\n        <mat-list-item>\\n          Must contain at least one lowercase ('a'-'z')\\n        </mat-list-item>\\n  \\n        <mat-list-item>\\n          Must contain at least one uppercase ('A'-'Z')\\n        </mat-list-item>\\n      </mat-list>\\n    </div> -->\"","export default \"<div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center none\\\">\\n\\n    <div fxFlex=\\\"95%\\\">\\n  \\n      <mat-card>\\n        <mat-card-content>\\n          <h2>Benefícios BomCupom</h2>\\n  \\n          <div fxLayout=\\\"row\\\" fxLayout.sm=\\\"column\\\" fxLayout.xs=\\\"column\\\">\\n  \\n            <div fxFlex=\\\"65%\\\" fxFlex.sm=\\\"95%\\\" fxFlex.xs=\\\"95%\\\">\\n              <app-details-benefits></app-details-benefits>\\n            </div>\\n  \\n            <div fxFlex></div>\\n  \\n            <div fxFlex=\\\"35%\\\" fxFlex.sm=\\\"95%\\\" fxFlex.xs=\\\"950%\\\">\\n  \\n              <mat-tab-group>\\n                <mat-tab label=\\\"Novo Usuário\\\">\\n                  <app-register-user></app-register-user>\\n                </mat-tab>\\n              </mat-tab-group>  \\n  \\n            </div>\\n  \\n          </div>\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n  \\n  \\n  </div>\"","import { Observable } from 'rxjs';\nimport { environment } from './../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from './../../shared/interfaces/user';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  user: User;\n  url: string = 'dashboard/customers';\n\n  constructor(private http: HttpClient) { }\n\n  addUser(user: User): Observable<User> {\n    return this.http.post<User>(environment.api + this.url, user);\n  }\n\n}\n","export default \".profile-card {\\r\\n    text-align: center;\\r\\n    background-position: center;\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: auto;\\r\\n    height: 100%;\\r\\n    /* background-image: url('angular/assets/images/backgrounds/register_2.jpg'); */\\r\\n}\\r\\n\\r\\nh1 \\r\\n{\\r\\n    color: white;\\r\\n    font-size: 20px;\\r\\n}\\r\\n\\r\\nlabel \\r\\n{\\r\\n    color: white;\\r\\n    font-size: 15px;\\r\\n}\\r\\n\\r\\nul.a \\r\\n{\\r\\n    list-style-type: circle;\\r\\n    color: white;\\r\\n    font-size: 14px;\\r\\n    margin-top: 2%;\\r\\n}\\r\\n\\r\\nul.a li \\r\\n{\\r\\n    margin-top: 2%;\\r\\n}\\r\\n \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvZGV0YWlscy1iZW5lZml0cy9kZXRhaWxzLWJlbmVmaXRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsMkJBQTJCO0lBQzNCLDRCQUE0QjtJQUM1QixxQkFBcUI7SUFDckIsWUFBWTtJQUNaLCtFQUErRTtBQUNuRjs7QUFFQTs7SUFFSSxZQUFZO0lBQ1osZUFBZTtBQUNuQjs7QUFFQTs7SUFFSSxZQUFZO0lBQ1osZUFBZTtBQUNuQjs7QUFHQTs7SUFFSSx1QkFBdUI7SUFDdkIsWUFBWTtJQUNaLGVBQWU7SUFDZixjQUFjO0FBQ2xCOztBQUVBOztJQUVJLGNBQWM7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9yZWdpc3Rlci9kZXRhaWxzLWJlbmVmaXRzL2RldGFpbHMtYmVuZWZpdHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9maWxlLWNhcmQge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogYXV0bztcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIC8qIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnYW5ndWxhci9hc3NldHMvaW1hZ2VzL2JhY2tncm91bmRzL3JlZ2lzdGVyXzIuanBnJyk7ICovXHJcbn1cclxuXHJcbmgxIFxyXG57XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbn1cclxuXHJcbmxhYmVsIFxyXG57XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbn1cclxuXHJcblxyXG51bC5hIFxyXG57XHJcbiAgICBsaXN0LXN0eWxlLXR5cGU6IGNpcmNsZTtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIG1hcmdpbi10b3A6IDIlO1xyXG59XHJcblxyXG51bC5hIGxpIFxyXG57XHJcbiAgICBtYXJnaW4tdG9wOiAyJTtcclxufVxyXG4gIl19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-details-benefits',\n  templateUrl: './details-benefits.component.html',\n  styleUrls: ['./details-benefits.component.css']\n})\nexport class DetailsBenefitsComponent implements OnInit {\n\n  backgroundImg: string = 'angular/assets/images/backgrounds/register.jpg';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'user',\n    component: RegisterComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule { }\n","export default \".password-rules .mat-divider {\\r\\n    position: unset !important;\\r\\n}\\r\\n.container{\\r\\n    padding-top: 20px;\\r\\n}\\r\\n.block-form\\r\\n{\\r\\n    margin: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXItdXNlci9yZWdpc3Rlci11c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwwQkFBMEI7QUFDOUI7QUFDQTtJQUNJLGlCQUFpQjtBQUNyQjtBQUdBOztJQUVJLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9yZWdpc3Rlci9yZWdpc3Rlci11c2VyL3JlZ2lzdGVyLXVzZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wYXNzd29yZC1ydWxlcyAubWF0LWRpdmlkZXIge1xyXG4gICAgcG9zaXRpb246IHVuc2V0ICFpbXBvcnRhbnQ7XHJcbn1cclxuLmNvbnRhaW5lcntcclxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xyXG59XHJcblxyXG5cclxuLmJsb2NrLWZvcm1cclxue1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG59Il19 */\"","import { RegisterService } from './../../core/services/register.service';\nimport { NotificationService } from './../../core/services/notification.service';\nimport { SpinnerService } from './../../core/services/spinner.service';\nimport { NGXLogger } from 'ngx-logger';\nimport { AuthenticationService } from 'src/app/core/services/auth.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register-user',\n  templateUrl: './register-user.component.html',\n  styleUrls: ['./register-user.component.css']\n})\nexport class RegisterUserComponent implements OnInit {\n\n  form: FormGroup;\n  hideCurrentPassword: boolean;\n  hideNewPassword: boolean;\n  name: string;\n  email: string;\n  password: string;\n  password_confirm: string;\n  date_birth: string;\n  genre: number;\n  disableSubmit: boolean; \n\n  constructor(\n    private authService: AuthenticationService,\n    private service: RegisterService,\n    private logger: NGXLogger,\n    private spinnerService: SpinnerService,\n    private notificationService: NotificationService) {\n\n    this.hideCurrentPassword = true;\n    this.hideNewPassword = true;\n  }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      name: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n      password_confirm: new FormControl('', Validators.required),\n      date_birth: new FormControl('', Validators.required),\n      genre: new FormControl('', Validators.required),\n    });\n\n    this.form.get('name').valueChanges\n      .subscribe(val => { this.name = val; }); \n\n    this.form.get('email').valueChanges\n      .subscribe(val => { this.email = val; });\n\n    this.form.get('password').valueChanges\n      .subscribe(val => { this.password = val; });\n    \n      this.form.get('password_confirm').valueChanges\n      .subscribe(val => { this.password_confirm = val; });\n     \n      this.form.get('date_birth').valueChanges\n      .subscribe(val => { this.date_birth = val; });\n     \n      this.form.get('genre').valueChanges\n      .subscribe(val => { this.genre = val; });\n\n    this.spinnerService.visibility.subscribe((value) => {\n      this.disableSubmit = value;\n    });\n  }\n\n  \n  registerUser() {\n    if (this.password !== this.password_confirm) {\n      this.notificationService.openSnackBar('Senhas não conferem, tente novamente.');\n      return;\n    }\n\n    // const email = this.authService.getCurrentUser().email;\n    const name = 'Cliente teste';\n    this.service.addUser(this.form.value)\n      .subscribe(res => {\n        if(res['success']) {\n          this.logger.info(`User ${name} changed password.`);\n          this.form.reset();\n          this.notificationService.openSnackBar('Usuário registrado com sucesso!');\n        }\n      }, error => {\n        this.notificationService.openSnackBar(error.error);\n      })\n    // this.authService.changePassword(email, this.password_confirm, this.password)\n    //   .subscribe(\n    //     data => {\n    //       this.logger.info(`User ${email} changed password.`);\n    //       this.form.reset();\n    //       this.notificationService.openSnackBar('Your password has been changed.');\n    //     },\n    //     error => {\n    //       this.notificationService.openSnackBar(error.error);\n    //     }\n    //   );\n  }\n\n}\n","import { RouterModule } from '@angular/router';\nimport { SharedModule } from './../shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RegisterRoutingModule } from './register-routing.module';\nimport { RegisterUserComponent } from './register-user/register-user.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DetailsBenefitsComponent } from './details-benefits/details-benefits.component';\n\n\n@NgModule({\n  declarations: [\n    RegisterUserComponent,\n    RegisterComponent,\n    DetailsBenefitsComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RegisterRoutingModule,\n    RouterModule\n  ]\n})\nexport class RegisterModule { }\n","export default \"\\r\\nmat-card\\r\\n{\\r\\n    margin-top: 3%;\\r\\n    height: 500px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7O0lBRUksY0FBYztJQUNkLGFBQWE7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9yZWdpc3Rlci9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbm1hdC1jYXJkXHJcbntcclxuICAgIG1hcmdpbi10b3A6IDMlO1xyXG4gICAgaGVpZ2h0OiA1MDBweDtcclxufSJdfQ== */\"","import { Title } from '@angular/platform-browser';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private titleService: Title) { }\n\n  ngOnInit() {\n    this.titleService.setTitle('Meu cadastro');\n  }\n\n}\n"],"sourceRoot":"webpack:///"}